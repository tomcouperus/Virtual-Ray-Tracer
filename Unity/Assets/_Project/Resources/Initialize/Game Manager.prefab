%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!1 &2981704608641618395
GameObject:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  serializedVersion: 6
  m_Component:
  - component: {fileID: 2981704608641618394}
  - component: {fileID: 2981704608641618389}
  m_Layer: 0
  m_Name: Game Manager
  m_TagString: Untagged
  m_Icon: {fileID: 0}
  m_NavMeshLayer: 0
  m_StaticEditorFlags: 0
  m_IsActive: 1
--- !u!4 &2981704608641618394
Transform:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 2981704608641618395}
  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}
  m_LocalPosition: {x: 0, y: 0, z: 0}
  m_LocalScale: {x: 1, y: 1, z: 1}
  m_ConstrainProportionsScale: 0
  m_Children: []
  m_Father: {fileID: 0}
  m_RootOrder: 0
  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
--- !u!114 &2981704608641618389
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 2981704608641618395}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 2772df30850017f4ea8f72e5bb972550, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  FPSEnabled: 0
  CheatMode: 0
  TutorialTasks:
  - optionalTasksStart: 17
    tasks:
    - identifier: 
      name: Introduction
      description: Welcome to Virtual Ray Tracer! These tutorial tasks will guide
        you through the program. Below this text, a progress bar is shown, which
        displays your progress in the current level.  There are 6 levels in total.
        Press the button to the right of the progress bar to continue to the next
        task.
      skippable: 1
      points: 95
    - identifier: 
      name: Introduction
      description: 'As you can see, you have now made a little progress in the current
        level. You may also have noticed that you have earned some points. They are
        shown to the left of the progress bar. These points will help you unlock
        cool objects in the final level! Next to points, you will also earn badges
        along the way.

'
      skippable: 1
      points: 86
    - identifier: help
      name: Help Menu
      description: We'll first start by going over the controls and the various interface
        elements. If you get lost somewhere, you can always go back to previous task(s)
        or find all the necessary information in the help menu. Access this menu
        any time by clicking the "Help" button in the top left or by pressing [F1].
      skippable: 0
      points: 153
    - identifier: mainMenu
      name: Main Menu
      description: In the main menu you have options to go back to home screen, switch
        between levels (once they have been unlocked), see your earned badges, change
        settings, and exit the program. Access the main menu by clicking the "Main
        Menu" button in the top left or by pressing [ESC].
      skippable: 0
      points: 141
    - identifier: cameraPan
      name: Camera Panning
      description: Pan the camera by moving your mouse while holding down the middle
        mouse button or by using the arrow keys.
      skippable: 0
      points: 162
    - identifier: cameraOrbit
      name: Camera Orbiting
      description: 'Orbit the camera by moving your mouse while holding down left-click
        and left control or by using the arrow keys while holding down left control.
        (For Mac users: use left command)'
      skippable: 0
      points: 169
    - identifier: cameraZoom
      name: Camera Zooming
      description: Zoom the camera in and out by scrolling your mousewheel.
      skippable: 0
      points: 126
    - identifier: objectSelect
      name: Object Selection
      description: You can select the camera, lights and objects in the scene by
        left-clicking on them. Select the ground, wall or sphere in this scene.
      skippable: 0
      points: 121
    - identifier: hoverColor
      name: Property Information
      description: The object's properties are now shown on the right. Hover over
        the "Color" text to see more information.
      skippable: 0
      points: 138
    - identifier: editColor
      name: Edit Properties
      description: Change the color of an object in the properties panel.
      skippable: 0
      points: 107
    - identifier: objectTranslation
      name: Translation
      description: Move an object by moving your mouse while holding down left-click
        on one of the three gizmos (the arrows coming from the object). Notice how
        the position values change while moving the object.
      skippable: 0
      points: 155
    - identifier: transformationEdit
      name: Transformation Mode
      description: The transformation mode can be changed using the dropdown in the
        top left or by pressing [T]ranslate, [S]cale and [R]otate. Change the current
        transformation mode to Scale.
      skippable: 0
      points: 99
    - identifier: objectScaling
      name: Scaling
      description: 'Now scale an object using the gizmos. Notice how the scale values
        change while scaling the object. '
      skippable: 0
      points: 98
    - identifier: objectRotation
      name: Rotation
      description: 'Change the current transformation mode to "rotate" and rotate
        an object using the gizmos. Notice how the rotation values change while rotating
        the object. '
      skippable: 0
      points: 77
    - identifier: deselect
      name: Deselection
      description: Deselect an object by left-clicking on an empty part of the scene
        or by pressing [ESC].
      skippable: 0
      points: 58
    - identifier: notDisabledEdit
      name: Ray Tracer Properties
      description: 'When nothing is selected, the general ray tracer properties are
        shown. Almost all options are disabled right now to keep things simple. Click
        on an option that is not disabled (HINT: it''s a button).'
      skippable: 0
      points: 51
    - identifier: 
      name: 
      description: 
      skippable: 1
      points: 0
    - identifier: cameraSelection
      name: Camera
      description: Select the camera.
      skippable: 0
      points: 187
    - identifier: localSpace
      name: Global vs Local Space
      description: Switch to "Local" space by changing the dropdown in the top left.
      skippable: 0
      points: 241
    - identifier: cameraTranslation
      name: Global vs Local Space
      description: Switch to "Translate" transformation mode and move the camera
        around. Notice how local space differs from global space.
      skippable: 0
      points: 144
    - identifier: 
      name: 
      description: 
      skippable: 0
      points: 0
  - optionalTasksStart: 5
    tasks:
    - identifier: 
      name: 3D Objects
      description: "The scene in the previous levels was made up of many 3D objects.
        Before we continue, we will first go over how a 3D object is made. As an
        example, we\u2019ll use the cube you can see on screen."
      skippable: 1
      points: 0
    - identifier: 3DObjects_verticesEdgesFaces
      name: Vertices, edges and faces
      description: A 3D object is made of points (vertices), connected by lines (edges),
        to form triangles (faces). If you do this in specific ways, you can make
        any shape you desire. Our cube has 8 corners and each corner is a vertex.
        Select the cube and check the Show Vertices checkmark.
      skippable: 0
      points: 0
    - identifier: 3DObjects_vertex
      name: Vertex
      description: These spheres represent a vertex. Each of these vertices is connected
        to at least 2 others by edges. Check the Show Edges checkmark.
      skippable: 0
      points: 0
    - identifier: 
      name: Edge
      description: The grey lines show the edges between the vertices. Each triangle
        you see is a face.
      skippable: 1
      points: 0
    - identifier: 
      name: 
      description: 
      skippable: 1
      points: 0
  - optionalTasksStart: 12
    tasks:
    - identifier: 
      name: Light in the Real World
      description: Light sources (like the sun) emit photons that travel in straight
        lines until they hit an object. These photons may be absorbed, reflected
        or pass through an object. Some photons will find its way to an eye/camera
        where they are processed into an image.
      skippable: 1
      points: 102
    - identifier: 
      name: Ray Tracing
      description: In ray tracing, this process is simulated. However, instead of
        tracing rays (photons) from the light source, the rays are traced backwards
        from the eye/camera to the light source. This still creates realistic images
        but it is much faster.
      skippable: 1
      points: 111
    - identifier: selectPixel
      name: Select Pixel
      description: In the bottom right a render preview is shown. This render preview
        shows the ray traced colors of the camera's pixels. Click on one of the pixels
        in the render preview and notice how the ray is traced from the camera towards
        the light source.
      skippable: 0
      points: 127
    - identifier: deselectPixel
      name: Deselect Pixel
      description: If we want to see all rays again, we need to deselect the selected
        pixel. Click on the selected pixel again to deselect it.
      skippable: 0
      points: 120
    - identifier: selectSphere
      name: Ambient and Diffuse Components
      description: In this scene, the colors in the render preview are determined
        by the ambient and diffuse components of the objects. Select the sphere to
        see its ambient and diffuse components.
      skippable: 0
      points: 106
    - identifier: editAmbient
      name: Ambient Component
      description: The ambient component describes the base brightness of the object.
        This way, it simulates a global ambient light. Change the ambient component
        and notice how it affects the scene and render preview.
      skippable: 0
      points: 108
    - identifier: editDiffuse
      name: Diffuse Component
      description: The diffuse component describes the brightness of the object in
        the places where it is lit. Change the diffuse component and notice how it
        is different from the ambient component.
      skippable: 0
      points: 87
    - identifier: selectCamera
      name: Camera Pixels
      description: The render preview only shows a few pixels right now. We can change
        this in the camera settings. Select the camera.
      skippable: 0
      points: 46
    - identifier: editHorPixels
      name: Horizontal Camera Pixels
      description: Change the number of horizontal pixels and notice how it affects
        the render preview.
      skippable: 0
      points: 40
    - identifier: editVerPixels
      name: Vertical Camera Pixels
      description: Change the number of vertical pixels and notice how it affects
        the render preview.
      skippable: 0
      points: 33
    - identifier: renderImage
      name: Rendering the Scene
      description: We can get even more ray traced pixels by rendering the current
        scene into an image. Go into the ray tracer properties and click the "Render
        Image" button on the bottom.
      skippable: 0
      points: 55
    - identifier: 
      name: 
      description: 
      skippable: 1
      points: 0
    - identifier: editSuperSampling
      name: Super Sampling
      description: You might notice that the sphere isn't very round in the rendered
        image; you can see the edges of some pixels. This can be improved by the
        use of super sampling. Super sampling will shoot multiple rays through one
        pixel and then average the color. Increase the "Super Sampling" factor in
        the ray tracer properties.
      skippable: 0
      points: 234
    - identifier: renderImage
      name: Rendering the Scene
      description: Rendering the scene will now take a lot longer as more rays are
        being traced. However, it does result in a better image. Render the scene
        again.
      skippable: 0
      points: 555
    - identifier: editAnimSpeed
      name: Animation Speed
      description: 'The ray tracing animation can also be changed in the ray tracer
        settings. Change the animation speed. '
      skippable: 0
      points: 357
    - identifier: editAnimSeq
      name: Animate Sequentially
      description: Check the "Animate Sequentially" checkbox and notice how the rays
        are now animated one after the other (sequentially).
      skippable: 0
      points: 321
    - identifier: editAnimLoop
      name: Animation Loop
      description: Currently the animation is looping. Turn this off by unchecking
        the "Loop Animation" checkbox.
      skippable: 0
      points: 285
    - identifier: editAnimRays
      name: Animate Rays
      description: We can also turn off all ray animations. Uncheck the "Animate
        Rays" checkbox.
      skippable: 0
      points: 258
    - identifier: 
      name: 
      description: 
      skippable: 0
      points: 0
  - optionalTasksStart: 9
    tasks:
    - identifier: 
      name: Introduction
      description: Instead of having one colour, objects often have complicated paterns
        and colour arangements. Your computer can map an image onto a 3D object to
        make this possible. But how do you map a 2D image onto a 3D object? With
        a concept called "Texture Mapping".
      skippable: 1
      points: 0
    - identifier: TextureProperties_Selected
      name: Example
      description: Texture mapping means that every vertex in a 3D space has a coordinate
        on a 2D plane. We will show in an example what this looks like. Click on
        the large plane, which we will use as a projection surface, and click on
        Edit next to Texture.
      skippable: 0
      points: 0
    - identifier: 
      name: Textures
      description: The images that are used to show specific patterns or drawings
        are called "Textures". This means that every point on a 3D object, corresponds
        with a 2D point. This 2D coordinate is called a "UV coordinate". The colour
        found at the UV coordinate can be used to colour in 3D space.
      skippable: 1
      points: 0
    - identifier: Unwrap_Transition
      name: UV Unwrapping
      description: Every vertex in a 3D object also has a 2D position. This  UV coordinate
        can either be calculated, or assigned manually. For the sphere the positions
        are often calculated with a function. By using the Transition slider you
        can see how the sphere unwraps. Set the value of the slider to 1.
      skippable: 0
      points: 0
    - identifier: Mapping_Loop
      name: Sphere unwrapping
      description: When you check the Loop box, the sphere will animate from it's
        3D coordinates to the UV coordinates and back. This will allow you to look
        from different angles to see how the sphere unwraps. Check the Loop box.
      skippable: 0
      points: 0
    - identifier: Texture_Changed
      name: Other textures
      description: You can also apply different textures to see how different images
        display. Select a different texture.
      skippable: 0
      points: 0
    - identifier: Pyramid_Select
      name: Manual UV
      description: UV coordinates are often set manually when textures need  to be
        displayed precisely on 3D objects. Switch to  "Pyramid".
      skippable: 0
      points: 0
    - identifier: 
      name: Texture Coverage
      description: Here we have set the UV coordinates manually. When looking at
        the full projection, not the full image needs to covered. This way only parts
        of the image that need to be used are used. It is however preferred to use
        as much of the image as possible for optimal detail.
      skippable: 1
      points: 0
    - identifier: 
      name: 
      description: 
      skippable: 1
      points: 0
  - optionalTasksStart: 9
    tasks:
    - identifier: 
      name: Introduction
      description: "So far, we\u2019ve mapped the vertices of our objects to points
        on a texture image. But how do we get this onto the screen by ray tracing?"
      skippable: 1
      points: 0
    - identifier: 
      name: Rays and vertices
      description: If a ray exactly hits a vertex, then it immediately knows the
        right UV-coordinate. But what happens if a ray hits somewhere else?
      skippable: 1
      points: 0
    - identifier: 
      name: Interpolation
      description: "As you know, a surface is formed when 3 vertices are connected
        to form a triangle. We can calculate the UV-coordinate for any point on a
        triangle by interpolating between UV-coordinates of the triangle\u2019s vertices."
      skippable: 1
      points: 0
    - identifier: 
      name: Interpolation methods
      description: 'The interpolated UV-coordinates do not necessarily land in the
        center of a texture pixel. There are many ways to handle this. Each method
        gives more realistic visuals and is more costly than the last. We will explain
        the two simplest, yet most used ones: nearest-neighbor sampling and bilinear
        interpolation.'
      skippable: 1
      points: 0
    - identifier: TextureSampling_TextureSample
      name: Texture sample
      description: Select the Show Sampling checkmark in the object menu and hover
        on a spot on the cube.
      skippable: 0
      points: 0
    - identifier: TextureSampling_NNInterpolate
      name: Nearest-neighbor sampling
      description: "In the texture preview you can see the place on the texture where
        you hovered on the cube. Nearest-neighbor sampling simply picks the texture
        pixel nearest to where you hover as the ray\u2019s color. Change the Sample
        Mode to bilinear."
      skippable: 0
      points: 0
    - identifier: 
      name: Bilinear interpolation
      description: The preview now shows the 4 nearest texture pixels near where
        you hover. With bilinear interpolation the pixel you hovered on gets a weighted
        average color of these four texture pixels.
      skippable: 1
      points: 0
    - identifier: 
      name: Conclusion
      description: In conclusion, nearest-neighbor sampling rounds the UV coordinates
        and chooses that color. Bilinear interpolation, on the other hand, gets a
        weighted average of the colors of the 4 points surrounding it.
      skippable: 1
      points: 0
    - identifier: 
      name: 
      description: 
      skippable: 0
      points: 0
  - optionalTasksStart: 5
    tasks:
    - identifier: 
      name: Introduction
      description: "Until now, the textures we have used were prepared specifically
        for the models we showed. This will quickly cost a lot of time if you\u2019re
        making small variations of the same model, for example different shapes and
        sizes of rocks or differently styled brick houses."
      skippable: 1
      points: 0
    - identifier: 
      name: Brick houses
      description: Say you want to make a dozen houses with a different brick style;
        you could draw their texture maps by hand, but that would take a lot of time.
        If you could just specify how many rows and columns of bricks you would want,
        along with their color and some other settings, you would be done much sooner.
      skippable: 1
      points: 0
    - identifier: ProceduralTextures_ProcBrick
      name: Procedural textures
      description: That is what procedural textures do. To see them in action, click
        on the cube and select the brick texture.
      skippable: 0
      points: 0
    - identifier: 
      name: Brick choices
      description: The generated brick texture has exactly as many horizontal and
        vertical bricks as are specified in the menu. Play around with these options
        until you find some you like.
      skippable: 1
      points: 0
    - identifier: 
      name: 
      description: 
      skippable: 1
      points: 0
    - identifier: 
      name: Natural textures
      description: 'Apart from bricks, you can model functionally anything if you
        apply some maths. To make things look less artificial like our brick wall,
        you add multiple layers of noise. This is the same kind of noise you would
        see on old TVs that could not find a channel, except with a very subtle pattern
        to them. '
      skippable: 1
      points: 0
    - identifier: ProceduralTextures_ProcMarble
      name: Marble
      description: If you combine a sine wave with two layers of this noise, you
        can get marble and other stone like materials. Select the marble texture
        and play around with the sliders to see what they do.
      skippable: 0
      points: 0
    - identifier: 
      name: 
      description: 
      skippable: 1
      points: 0
  Badges:
  - type: 1
    badgeName: Experimenter
    badgeDescription: Play with the Virtual Ray Tracer for 3 minutes
    actionTotal: 3
  - type: 1
    badgeName: Expert
    badgeDescription: Play with the Virtual Ray Tracer for 30 minutes
    actionTotal: 30
  - type: 0
    badgeName: Points Gatherer
    badgeDescription: Earn at least 1000 points
    actionTotal: 1000
  - type: 0
    badgeName: Points Galore
    badgeDescription: Earn at least 10000 points
    actionTotal: 10000
  - type: 2
    badgeName: Builder
    badgeDescription: Ceate 5 objects
    actionTotal: 5
  - type: 2
    badgeName: Creator
    badgeDescription: Create 50 objects
    actionTotal: 50
  - type: 3
    badgeName: You found the easter egg
    badgeDescription: The force is strong in this one
    actionTotal: 1
